Grammar

    0 $accept: program $end

    1 program: TYPE_PROGRAM TYPE_IDENT prog_instr

    2 prog_instr: TYPE_RETURN
    3           | TYPE_RETURN expr

    4 expr: cte

    5 cte: TYPE_INTEGER
    6    | TYPE_BOOLEAN


Terminals, with rules where they appear

$end (0) 0
error (256)
TYPE_PROGRAM (258) 1
TYPE_IDENT (259) 1
TYPE_RETURN (260) 2 3
TYPE_INTEGER (261) 5
TYPE_BOOLEAN (262) 6


Nonterminals, with rules where they appear

$accept (8)
    on left: 0
program (9)
    on left: 1, on right: 0
prog_instr (10)
    on left: 2 3, on right: 1
expr (11)
    on left: 4, on right: 3
cte (12)
    on left: 5 6, on right: 4


state 0

    0 $accept: . program $end

    TYPE_PROGRAM  shift, and go to state 1

    program  go to state 2


state 1

    1 program: TYPE_PROGRAM . TYPE_IDENT prog_instr

    TYPE_IDENT  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: TYPE_PROGRAM TYPE_IDENT . prog_instr

    TYPE_RETURN  shift, and go to state 5

    prog_instr  go to state 6


state 4

    0 $accept: program $end .

    $default  accept


state 5

    2 prog_instr: TYPE_RETURN .
    3           | TYPE_RETURN . expr

    TYPE_INTEGER  shift, and go to state 7
    TYPE_BOOLEAN  shift, and go to state 8

    $default  reduce using rule 2 (prog_instr)

    expr  go to state 9
    cte   go to state 10


state 6

    1 program: TYPE_PROGRAM TYPE_IDENT prog_instr .

    $default  reduce using rule 1 (program)


state 7

    5 cte: TYPE_INTEGER .

    $default  reduce using rule 5 (cte)


state 8

    6 cte: TYPE_BOOLEAN .

    $default  reduce using rule 6 (cte)


state 9

    3 prog_instr: TYPE_RETURN expr .

    $default  reduce using rule 3 (prog_instr)


state 10

    4 expr: cte .

    $default  reduce using rule 4 (expr)
